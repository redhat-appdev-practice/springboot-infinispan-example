plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.5'
  id("com.github.bjornvester.wsdl2java") version "1.2"
}

group = 'com.redhat.runtimes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
repositories {
  maven {
    url 'https://maven.repository.redhat.com/ga/'
  }
	mavenCentral()
}

def infinispanVersion = '13.0.10.Final-redhat-00001'

dependencies {
  def springBootVersion = '2.5.12.Final-redhat-00001'
  implementation enforcedPlatform('dev.snowdrop:snowdrop-dependencies:' + springBootVersion)
  implementation enforcedPlatform('org.infinispan:infinispan-bom:' + infinispanVersion)
  implementation ('org.springframework.boot:spring-boot-starter-actuator')
  implementation ('org.springframework.boot:spring-boot-autoconfigure')
  implementation ('org.springframework.session:spring-session-core')
  implementation('com.fasterxml.jackson.core:jackson-annotations:')
  implementation('org.springframework.boot:spring-boot-starter-undertow')
  implementation('org.springframework.boot:spring-boot-starter-web') {
    exclude (group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat')
  }
  implementation ('org.springframework.boot:spring-boot-starter-aop')
  implementation ('org.infinispan:infinispan-spring-boot-starter-remote')
  implementation('ch.qos.logback:logback-core')
  implementation('org.slf4j:slf4j-api')
  implementation('org.instancio:instancio-core:1.5.2')
  testImplementation('org.junit.jupiter:junit-jupiter:5.9.0')
  implementation("org.jvnet.jaxb2_commons:jaxb2-basics-runtime:1.11.1")
  xjcPlugins("org.jvnet.jaxb2_commons:jaxb2-basics:1.11.1")
}

wsdl2java {
  wsdlDir = layout.projectDirectory.dir('src/main/resources/soap')
  includes = [
    '**/petstore.wsdl'
  ]
  options.addAll("-xjc-Xequals", "-xjc-XhashCode")
  bindingFile = layout.projectDirectory.file("src/main/resources/soap/bindings.xjb")
  generatedSourceDir = layout.projectDirectory.dir('src/generated/wsdl2java')
  packageName = 'com.redhat.runtimes.infinispan.example.models'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("bootJar") {
	archiveClassifier = 'boot'
	mainClass = 'com.redhat.runtimes.infinispan.example.InfinispanExampleApplication'
}

tasks.named("jar") {
	archiveClassifier = 'boot'
}


